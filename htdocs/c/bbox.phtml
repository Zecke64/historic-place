<?php
#===============================================================================
#	$Id: bbox.phtml,v 1.4 2017/09/09 21:28:30 wolf Exp $
#===============================================================================

require_once './csvdir.php';

#-----------------------------------------------------
#	DEBUG
#-----------------------------------------------------

$DEBUG = @intval (@$_GET['DEBUG']);

if ($DEBUG) {

	header ("Content-Type: text/plain; charset=UTF-8");
	echo "=== DEBUG: $DEBUG ===\n";
	flush();
}

#-----------------------------------------------------
#	Get name of dataset
#-----------------------------------------------------

if (!preg_match ('#^(\w[.\w-]*(/\w[.\w-]*)*)$#', @$_GET['db'], $match)) {

	header ("HTTP/1.0 400");
	exit ("Parameter 'db=' missing or invalid\n");
}

$DB = $match[1];

#-----------------------------------------------------
#	Get zoom level
#-----------------------------------------------------

if (!preg_match ('#^(\d|[12]\d)$#', @$_GET['zoom'], $match)) {

	header ("HTTP/1.0 400");
	exit ("Parameter 'zoom=' missing or invalid\n");
}

$ZOOM = $match[1];

#-----------------------------------------------------
#	File names
#-----------------------------------------------------

$datfile = sprintf ("%s/%s-%02d.dat", $CSVDIR, $DB, $ZOOM);
$idxfile = sprintf ("%s/%s-%02d.idx", $CSVDIR, $DB, $ZOOM);

#-----------------------------------------------------
#	Meta data request?
#-----------------------------------------------------

if (isset($_GET['meta']) && $_GET['meta']=='mtime') {

	header ("Content-Type: text/plain; charset=utf-8");
	echo @filemtime($datfile);
	exit(0);
}

#-----------------------------------------------------
#	Get bbox
#-----------------------------------------------------

if (!preg_match ('#^(-?\d+\.?\d*),(-?\d+\.?\d*),(-?\d+\.?\d*),(-?\d+\.?\d*)$#', @$_GET['bbox'], $match)) {

	header ("HTTP/1.0 400");
	exit ("Parameter 'bbox=' missing or invalid\n");
}

$INT_DEGREE_FACTOR = 180.0 / 0x80000000;

function uint2degrees ($uint) {

	global $INT_DEGREE_FACTOR;
	return ($uint>=(1<<31) ? $uint-(1<<32) : $uint) * $INT_DEGREE_FACTOR;
}

$MIN_LON = 1.0 * $match[1];
$MIN_LAT = 1.0 * $match[2];
$MAX_LON = 1.0 * $match[3];
$MAX_LAT = 1.0 * $match[4];

#-----------------------------------------------------
#	Max number of result lines
#-----------------------------------------------------

$LIMIT = @intval (@$_GET['limit']);
if (!$LIMIT) $LIMIT = 10;

#-----------------------------------------------------
#	Group?
#-----------------------------------------------------

$Groups = @$_GET['groups'] ? @mb_split (",", @$_GET['groups']) : false;

#===============================================================================
#	Open CSV DATA and INDEX
#===============================================================================

$data = @fopen ($datfile, 'r');
if (!$data) {

	header ("HTTP/1.0 404 Not found");
	header ("Content-Type: text/json; charset=utf-8");
	header ("X-Error: "."Cannot open '{$datfile}'");
	error_log ("Cannot open '{$datfile}");
	echo "{}\n";
	exit();
}

#-------------------------------------------------------------------------------
#	Get field names from first line
#-------------------------------------------------------------------------------

$headline = fgets ($data, 64000);

if (trim($headline) != "id\tminlon\tminlat\tmaxlon\tmaxlat\tgroup\tjson") {

	header ("HTTP/1.0 400");
	exit ("Unexpected head line [$headline]\n");
}

#-------------------------------------------------------------------------------
#	Open CSV INDEX
#-------------------------------------------------------------------------------

$index = @fopen ($idxfile, 'r');

#===============================================================================
#	HTTP header and JSON header
#===============================================================================

header ("Content-Type: text/json; charset=utf-8");
header ("Last-Modified: ". date ('r', filemtime ($datfile)));

#-------------------------------------------------------------------------------
#	JSON header
#-------------------------------------------------------------------------------

echo '{"type":"FeatureCollection","features":[';

$sepa = "\n";
$nEntries = 0;

#===============================================================================
#	data
#===============================================================================

if ($index) {

	if ($DEBUG) echo "\n\nUSE INDEX. BBOX=$MIN_LON, $MIN_LAT, $MAX_LON, $MAX_LAT\n";

	for (;;) {

		$record = fread ($index, 24);
		if (strlen($record)<24) break;

		$u = unpack ("N6x", $record);

		$minLon = uint2degrees ($u['x1']);
		$minLat = uint2degrees ($u['x2']);
		$maxLon = uint2degrees ($u['x3']);
		$maxLat = uint2degrees ($u['x4']);
		$filepos= $u['x5'];
		$entries= $u['x6'];

		$hex = sprintf ('%06x', $filepos);

		if ($DEBUG>=2) echo "\n[$hex] $minLon, $minLat, $maxLon, $maxLat â†’ @$filepos #$entries\n";

		if ($minLon > $MAX_LON) continue;
		if ($minLat > $MAX_LAT) continue;
		if ($maxLon < $MIN_LON) continue;
		if ($maxLat < $MIN_LAT) continue;

		if ($DEBUG>=2) echo "SEEK!\n";

		fseek ($data, $filepos, 0);

		for ($i=0; $i<$entries; $i++) {

			$line = fgets ($data, 8000000);

			list ($id, $minLon, $minLat, $maxLon, $maxLat, $group, $json)
				= mb_split ("\t", trim ($line));

			if ($minLon > $MAX_LON) continue;
			if ($minLat > $MAX_LAT) continue;
			if ($maxLon < $MIN_LON) continue;
			if ($maxLat < $MIN_LAT) continue;

			if ($Groups && $group && !in_array($group, $Groups)) continue;

			if ($DEBUG>=2) echo "[$nEntries/$LIMIT] ";
			echo $sepa, $json;
			$sepa = ",\n";

			if (++$nEntries>$LIMIT) break 2;
		}
	}
	fclose ($index);

} else {

	while ($line = fgets ($data, 1000000)) {

		list ($id, $minLon, $minLat, $maxLon, $maxLat, $group, $json)
			= mb_split ("\t", trim ($line));

		if ($minLon > $MAX_LON) continue;
		if ($maxLon < $MIN_LON) continue;
		if ($minLat > $MAX_LAT) continue;
		if ($maxLat < $MIN_LAT) continue;

		if ($Groups && $group && !in_array($group, $Groups)) continue;

		if ($DEBUG>=2) echo "[$nEntries/$LIMIT] ";
		echo $sepa, $json;
		$sepa = ",\n";

		if (++$nEntries>$LIMIT) break;
	}
}

#===============================================================================
#	footer
#===============================================================================

echo "\n]}\n";
exit ();

#===============================================================================
#	$Id: bbox.phtml,v 1.4 2017/09/09 21:28:30 wolf Exp $
#===============================================================================
?>
